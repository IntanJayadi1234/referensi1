// Generated by Dagger (https://dagger.dev).
package com.codinginflow.simplecachingexample.data;

import com.codinginflow.simplecachingexample.api.RestaurantApi;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RestaurantRepository_Factory implements Factory<RestaurantRepository> {
  private final Provider<RestaurantApi> apiProvider;

  private final Provider<RestaurantDatabase> dbProvider;

  public RestaurantRepository_Factory(Provider<RestaurantApi> apiProvider,
      Provider<RestaurantDatabase> dbProvider) {
    this.apiProvider = apiProvider;
    this.dbProvider = dbProvider;
  }

  @Override
  public RestaurantRepository get() {
    return newInstance(apiProvider.get(), dbProvider.get());
  }

  public static RestaurantRepository_Factory create(Provider<RestaurantApi> apiProvider,
      Provider<RestaurantDatabase> dbProvider) {
    return new RestaurantRepository_Factory(apiProvider, dbProvider);
  }

  public static RestaurantRepository newInstance(RestaurantApi api, RestaurantDatabase db) {
    return new RestaurantRepository(api, db);
  }
}
